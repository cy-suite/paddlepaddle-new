name: PR-CI-Kunlun-bxcheck

on:
  workflow_call:

env:
  dockerfile: dockerfile
  docker_image: aa13dc110ab3
  PR_ID: ${{ github.event.pull_request.number }}
  COMMIT_ID: ${{ github.event.pull_request.head.sha }}
  ci_scripts: ${{ github.workspace }}/ci
  BRANCH: ${{ github.event.pull_request.base.ref }}

defaults:
  run:
    shell: bash

jobs:
  check-bypass:
    name: Check bypass for Kunlun
    uses: ./.github/workflows/check-bypass.yml
    with:
      workflow-name: 'kunlun'
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: check-bypass
    if: ${{ github.repository_owner == 'PaddlePaddle' && needs.check-bypass.outputs.can-skip != 'true' }}
    env:
      TASK: paddle-CI-${{ github.event.pull_request.number }}-kunlun_build
    runs-on:
      group: Kunlun-CPU

    steps:
    - name: Download paddle.tar.gz and update test branch
      run: |
        rm -rf * .[^.]*
        set -e
        wget -q --no-proxy https://paddle-github-action.bj.bcebos.com/PR/Paddle/${PR_ID}/${COMMIT_ID}/Paddle.tar.gz --no-check-certificate
        tar xf Paddle.tar.gz --strip-components=1
        rm Paddle.tar.gz
        git config --global user.name "PaddleCI"
        git config --global user.email "paddle_ci@example.com"
        git remote add upstream https://github.com/PaddlePaddle/Paddle.git
        . ../../../proxy
        git checkout test
        git pull upstream $BRANCH --no-edit

    - name: Check docker image and run container
      env:
        work_dir: ${{ github.workspace }}
        PADDLE_ROOT: ${{ github.workspace }}
        WITH_SHARED_PHI: "ON"
        WITH_XPU: "ON"
        COVERALLS_UPLOAD: "OFF"
        WITH_AVX: "OFF"
        GIT_PR_ID: ${{ github.event.pull_request.number }}
        PADDLE_VERSION: 0.0.0
        WITH_TESTING: "ON"
        WITH_DISTRIBUTE: "ON"
        PY_VERSION: 3.10
        XPU_VISIBLE_DEVICES: "0,1"
        CUDA_VERSION:
        CUDNN_VERSION:
        WITH_XPU_BKCL: "ON"
        WITH_XPU_XRE5: "ON"
        CACHE_DIR: /root/.cache
        CCACHE_DIR: /root/.ccache
        CCACHE_MAXSIZE: 150G
        CCACHE_LIMIT_MULTIPLE: 0.8
        no_proxy: "bcebos.com,apiin.im.baidu.com,gitee.com,aliyun.com,.baidu.com,.tuna.tsinghua.edu.cn"
        # http_proxy: $(cat ${{ github.workspace }}/../../../kunlun_proxy)
        # https_proxy: $(cat ${{ github.workspace }}/../../../kunlun_proxy)
        GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        container_name=${TASK}-$(date +%s)
        echo "container_name=${container_name}" >> ${{ github.env }}
        docker run --privileged -d -t --name ${container_name} \
          -v ${{ github.workspace }}/../../../../.cache:/root/.cache \
          -v ${{ github.workspace }}/../../../../.ccache:/root/.ccache \
          -v "${{ github.workspace }}/../../../..:${{ github.workspace }}/../../../.." \
          -e BRANCH \
          -e PR_ID \
          -e COMMIT_ID \
          -e work_dir \
          -e PADDLE_ROOT \
          -e WITH_SHARED_PHI \
          -e WITH_XPU \
          -e COVERALLS_UPLOAD \
          -e GIT_PR_ID \
          -e PADDLE_VERSION \
          -e WITH_TESTING \
          -e WITH_DISTRIBUTE \
          -e PY_VERSION \
          -e XPU_VISIBLE_DEVICES \
          -e CUDA_VERSION \
          -e CUDNN_VERSION \
          -e WITH_XPU_BKCL \
          -e WITH_XPU_XRE5 \
          -e PREC_SUFFIX \
          -e WITH_UNITY_BUILD \
          -e PROC_RUN \
          -e FLAGS_enable_eager_mode \
          -e WITH_TENSORRT \
          -e GENERATOR \
          -e WITH_INFERENCE_API_TEST \
          -e CACHE_DIR \
          -e CCACHE_DIR \
          -e CCACHE_MAXSIZE \
          -e CCACHE_LIMIT_MULTIPLE \
          -e GITHUB_ENV \
          -e ci_scripts \
          -e WITH_AVX \
          -e no_proxy \
          -e http_proxy \
          -e https_proxy \
          -w ${{ github.workspace }} --network host ${docker_image}

    - name: Build
      env:
        work_dir: ${{ github.workspace }}
        PADDLE_ROOT: ${{ github.workspace }}
      run: |
        docker exec -t ${container_name} /bin/bash -c -x '
        apt install ninja-build -y
        ulimit -n 102400
        . ../../../proxy
        bash ${ci_scripts}/run_setup.sh ${PYTHON_ABI:-""} bdist_wheel ${parallel_number:-""} kunlun
        EXCODE=$?
        exit $EXCODE
        '

    - name: Upload build.tar.gz and paddle_whl to bos
      env:
        AK: paddle
        SK: paddle
        home_path: ${{ github.workspace }}/..
        bos_file: ${{ github.workspace }}/../bos/BosClient.py
        paddle_whl: paddlepaddle_xpu-0.0.0-cp310-cp310-linux_x86_64.whl
      run: |
        if [ ! -f "${{ env.bos_file }}" ]; then
          wget -q --no-proxy -O ${{ env.home_path }}/bos_new.tar.gz https://xly-devops.bj.bcebos.com/home/bos_new.tar.gz --no-check-certificate
          mkdir ${{ env.home_path }}/bos
          tar xf ${{ env.home_path }}/bos_new.tar.gz -C ${{ env.home_path }}/bos
        fi
        cd ${{ github.workspace }}/..
        tar --use-compress-program="pigz" -cpPf build.tar.gz ./Paddle
        source /home/opt/deck/1.0/etc/bashrc
        python3 ${bos_file} build.tar.gz paddle-github-action/PR/kunlun-bxcheck/${{ env.PR_ID }}/${{ env.COMMIT_ID }}
        cd ${{ github.workspace }}/dist
        python3 ${bos_file} ${paddle_whl} paddle-github-action/PR/kunlun-bxcheck/${{ env.PR_ID }}/${{ env.COMMIT_ID }}

    # - name: Terminate and delete the container
    #   if: always()
    #   run: |
    #     docker exec -t ${container_name} /bin/bash -c 'rm -rf * .[^.]*'
    #     docker stop ${container_name}
    #     docker rm ${container_name}

  test:
    name: Test
    needs: build
    env:
      TASK: paddle-CI-${{ github.event.pull_request.number }}-kunlun_test
    runs-on:
      group: Kunlun

    steps:
    - name: Determine the runner
      run: |
        runner_name=`(echo $PWD|awk -F '/' '{print $3}')`
        echo $runner_name
        source ${ci_scripts}/utils.sh
        determine_kunlun_runner ${runner_name}

    - name: Download build.tar.gz
      run: |
        wget -q --no-proxy https://paddle-github-action.bj.bcebos.com/PR/kunlun-bxcheck/${PR_ID}/${COMMIT_ID}/build.tar.gz --no-check-certificate
        tar --use-compress-program="pigz" --strip-components=1 -xf build.tar.gz
        rm build.tar.gz

    - name: Check docker image and run container
      env:
        work_dir: ${{ github.workspace }}
        PADDLE_ROOT: ${{ github.workspace }}
        WITH_XPU: "ON"
        COVERALLS_UPLOAD: "OFF"
        CMAKE_BUILD_TYPE: Release
        WITH_AVX: "OFF"
        GIT_PR_ID: ${{ github.event.pull_request.number }}
        PADDLE_VERSION: 0.0.0
        WITH_TESTING: "ON"
        WITH_DISTRIBUTE: "ON"
        PY_VERSION: 3.10
        XPU_VISIBLE_DEVICES: ${{ CUDA_VISIBLE_DEVICES }}
        CUDA_VISIBLE_DEVICES: ${{ CUDA_VISIBLE_DEVICES }}
        CUDA_VERSION:
        CUDNN_VERSION:
        WITH_XPU_BKCL: "ON"
        WITH_XPU_XRE5: "ON"
        CACHE_DIR: /root/.cache
        CCACHE_DIR: /root/.ccache
        CCACHE_MAXSIZE: 150G
        CCACHE_LIMIT_MULTIPLE: 0.8
        no_proxy: "bcebos.com,apiin.im.baidu.com,gitee.com,aliyun.com,.baidu.com,.tuna.tsinghua.edu.cn"
        # http_proxy: $(cat ${{ github.workspace }}/../../../kunlun_proxy)
        # https_proxy: $(cat ${{ github.workspace }}/../../../kunlun_proxy)
        GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        container_name=${TASK}-$(date +%s)
        echo "container_name=${container_name}" >> ${{ github.env }}
        docker run --cap-add=SYS_PTRACE --privileged --ulimit nofile=102400 -d -t --name ${container_name} \
          -v ${{ github.workspace }}/../../.cache:/root/.cache \
          -v ${{ github.workspace }}/../../.ccache:/root/.ccache \
          -v "${{ github.workspace }}/../../..:${{ github.workspace }}/../../.." \
          --device ${XPU_CODE_1} \
          --device ${XPU_CODE_2} \
          --ulimit core=-1 \
          --shm-size=32g \
          -e BRANCH \
          -e PR_ID \
          -e COMMIT_ID \
          -e work_dir \
          -e PADDLE_ROOT \
          -e WITH_XPU \
          -e COVERALLS_UPLOAD \
          -e CMAKE_BUILD_TYPE \
          -e GIT_PR_ID \
          -e PADDLE_VERSION \
          -e WITH_TESTING \
          -e WITH_DISTRIBUTE \
          -e PY_VERSION \
          -e XPU_VISIBLE_DEVICES \
          -e CUDA_VISIBLE_DEVICES \
          -e CUDA_VERSION \
          -e CUDNN_VERSION \
          -e WITH_XPU_BKCL \
          -e WITH_XPU_XRE5 \
          -e CACHE_DIR \
          -e CCACHE_DIR \
          -e PREC_SUFFIX \
          -e WITH_UNITY_BUILD \
          -e PROC_RUN \
          -e FLAGS_enable_eager_mode \
          -e WITH_TENSORRT \
          -e GENERATOR \
          -e WITH_INFERENCE_API_TEST \
          -e CCACHE_MAXSIZE \
          -e CCACHE_LIMIT_MULTIPLE \
          -e GITHUB_ENV \
          -e ci_scripts \
          -e WITH_AVX \
          -e no_proxy \
          -e http_proxy \
          -e https_proxy \
          -e GITHUB_API_TOKEN \
          -w ${{ github.workspace }} --network host ${docker_image}

    - name: Run test
      run: |
