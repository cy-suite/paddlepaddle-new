name: Clone-linux

on:
  workflow_call:

permissions: read-all

defaults:
  run:
    shell: bash

env:
  PR_ID: ${{ github.event.pull_request.number }}
  COMMIT_ID: ${{ github.event.pull_request.head.sha }}
  ci_scripts: ${{ github.workspace }}/ci

jobs:
  Clone:
    # Don't run on forked repos.
    name: Clone Paddle
    if: github.repository_owner == 'PaddlePaddle'
    runs-on:
      group: HK-Clone

    steps:
    - name: Clone paddle
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.base.ref }}
        submodules: 'recursive'
        fetch-depth: 1000

    - name: Merge PR to test branch
      run: |
        git config --unset http.https://github.com/.extraheader
        git submodule foreach --recursive sh -c "git config --local --unset-all 'http.https://github.com/.extraheader'"
        git submodule foreach --recursive sh -c "git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'"
        git switch ${{ github.event.pull_request.base.ref }}
        set +e
        git branch -D test
        set -e
        git gc
        git switch -c test
        git config --global user.name "PaddleCI"
        git config --global user.email "paddle_ci@example.com"
        git fetch origin pull/${{ github.event.pull_request.number }}/head:pr
        git merge --no-ff pr
        git branch -d pr
        bash ${ci_scripts}/third_party_tag.sh

    - name: Download bos client
      env:
        home_path: "/home/paddle/actions-runner/"
        bos_file: "/home/paddle/actions-runner/bos/BosClient.py"
      run: |
        if [ ! -f "${bos_file}" ]; then
          wget -q --no-proxy -O ${home_path}/bos_new.tar.gz https://xly-devops.bj.bcebos.com/home/bos_new.tar.gz --no-check-certificate
          mkdir ${home_path}/bos
          tar xf ${home_path}/bos_new.tar.gz -C ${home_path}/bos
        fi

    - name: Push paddle-action.tar.gz to bos
      env:
        AK: paddle
        SK: paddle
        bos_file: "/home/paddle/actions-runner/bos/BosClient.py"
      run: |
        cd ..
        tar -zcf Paddle.tar.gz Paddle
        echo "::group::Install bce-python-sdk"
        python -m pip install bce-python-sdk==0.8.74
        echo "::endgroup::"
        python ${bos_file} Paddle.tar.gz paddle-github-action/PR/Paddle/${PR_ID}/${COMMIT_ID}
        rm Paddle.tar.gz
        cd -
        git switch ${{ github.event.pull_request.base.ref }}
        git branch -D test
        git gc

    # - name: Clean environment
    #   if: always()
    #   run: |
    #     cd ${{ github.workspace }}
    #     rm -rf * .[^.]*
